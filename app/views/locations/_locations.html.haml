- if (@locations)
  - @operators_map = "operators" if request.url.include?('operator_location_data')
  :javascript
    $("#search_link_wrapper,#min_lookup_wrapper,#nearby_activity_button, #closest_button").removeClass("hide_button");

    var locations_geojson = JSON.parse('#{@locations_geojson}');
    showLocations();

    var hrefOrig = '#{request.scheme}://#{request.host_with_port}/#{@region ? h(@region.name.downcase) : @operators_map ? @operators_map : "map"}?';
    var def_value = window.location.href;

    var url = '';
    if (typeof(search_string) == "undefined") {
      url = def_value;
      document.getElementById("search_link").href=url;
    } else {
      url = hrefOrig + search_string;
      document.getElementById("search_link").href=url;
    }

    if (history.pushState) {
      var a = document.createElement('a');
      a.href = url;

      window.history.pushState('', '', a.pathname + a.search);
    }
- if @locations_size == 1
  :javascript
    var locationName = "#{sanitize(@locations.first&.name)}";

    var regionName = "#{sanitize(@region&.full_name)}"

    newTitle = locationName + " - " + regionName + " Pinball Map";

    document.title = newTitle;
    $('meta[property="og:title"]').attr("content", newTitle);
- else
  :javascript
    document.title = "#{title_for_path(request.path, @region)}";
    $('meta[property="og:title"]').attr("content", "#{title_for_path(request.path, @region)}");

:javascript

  var topbutton = document.getElementById("top_button");
  window.onscroll = function() {scrollFunction()};

  function scrollFunction() {
    if (document.body.scrollTop > 40 || document.documentElement.scrollTop > 40) {
      topbutton.style.display = "block";
    } else {
      topbutton.style.display = "none";
    }
  }

  function topFunction() {
    document.body.scrollTop = 0; // For Safari
    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
  }

#results_container
  #search_results
    - if @locations.size > 1
      #search_results_count
        %p.bold.red
          #{number_with_delimiter(@locations_size,:delimiter => ",")} locations & #{number_with_delimiter(@machines_sum,:delimiter => ",")} machines in map results
        - if @locations_size > 100
          %span (Not all locations shown in the below list)
    - unless @locations.size == 1
      %div.back_to_results.font14.bold.pointer{:onclick => "backToResults();"}
        %span.left_arrow &#x2190;
        %span Go back to search results

    %div#location_detail.location_detail{:style => 'display:none;'}

    - @locations.each do |l|
      %div.search_result[l]
        %div#nearby_activity_container
        - if (@locations.size == 1)
          %div.location_detail
            = render :partial => 'locations/render_location_detail', :locals => {l: l}
        - else
          %div.sub_nav_location[l, :show_location_detail]{:onclick => "showLocationDetail(#{l.id});"}
            %div.name.bold.font22
              = l.name
            - if (l.location_type)
              %div.location_type
                - if (l.location_type.icon)
                  %div.location_type_container
                    =image_tag("icons/#{l.location_type.icon}.svg", :alt => "#{l.location_type.icon}")
                %span
                  #{l.location_type.name}
            - if (!params[:show_location_distance].blank? && !params[:lat].blank? && !params[:lon].blank?)
              %div.location_types= "distance: #{l.distance_from([params[:lat], params[:lon]]).round(2)} miles"
            - if (l.state.blank?)
              %div.address
                %span.address_name[l, :location_summary] #{[l.street, l.city].join(', ')}
            - else
              %div.address
                %span.address_name[l, :location_summary] #{[l.street, l.city, l.state].join(', ')}
            %div.machine_names
              - l.machines.limit(5).each do |machine|
                %div
                  #{machine.name}
                  %span.man_year (#{[machine.manufacturer, machine.year].reject(&:blank?).join(', ')})
            - if (l.machine_count > 5)
              %div.darkgrey.italic.pb_15
                plus
                = pluralize(l.machine_count - 5, 'more machine')
