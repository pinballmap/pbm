- if (@locations)
  :javascript

    clearMarkers();
    clearInfoWindows();
    $("#mapFollow_wrapper,#search_link_wrapper,#min_lookup_wrapper").removeClass("hide_button");

    showLocations(
      [#{@location_data[0].join(', ')}],
      [#{@location_data[1].join(', ')}],
      [#{@location_data[2].join(', ')}],
      [#{@location_data[3].join(', ').html_safe}]
    );

    var hrefOrig = 'https://#{request.host_with_port}/#{@region ? @region.name.downcase : "regionless"}?';
    var def_value = window.location.href;

    var url = '';
    if (typeof(search_string) == "undefined") {
      url = def_value;
      document.getElementById("search_link").href=url;
    } else {
      url = hrefOrig + search_string;
      document.getElementById("search_link").href=url;
    }

    if (history.pushState) {
      var a = document.createElement('a');
      a.href = url;

      window.history.pushState('', '', a.pathname + a.search);
    }

:javascript
  var isSingleLocation = #{@locations.size == 1 ? true : false}

  if (isSingleLocation) {
    var locationName = "#{raw @locations.size == 0 ? '' : @locations[0].name}";
    var locationAddress = "#{raw @locations.size == 0 ? '' : @locations[0].full_street_address}";
    var regionName = "#{raw @locations.size == 0 ? '' : @locations[0].region ? @locations[0].region.full_name : ''}";
    var machineCount = "#{raw @locations.size == 0 ? '' : @locations[0].machines.count}";
    var machineNames = "#{raw @locations.size == 0 ? '' : @locations[0].machine_names[0,3].join(', ')}";
    var machineSingle = "#{raw @locations.size == 0 ? '' : @locations[0].machines.count > 1 ? 'pinball machines' : 'pinball machine'}";
    var machineMoreThree = "#{raw @locations.size == 0 ? '' : @locations[0].machines.count > 3 ? ' and more!' : '.'}";

    newTitle = locationName + " - " + regionName + " Pinball Map";
    newDesc = locationName + " on Pinball Map! " + locationAddress + ". " + locationName + " has " + machineCount + " " + machineSingle + ": " + machineNames + machineMoreThree;

    document.title = newTitle;
    $('meta[property="og:title"]').attr("content", newTitle);
    $('meta[name="description"]').attr("content", newDesc);
    $('meta[property="og:description"]').attr("content", newDesc);
  } else {
    document.title = "#{title_for_path(request.path, @region)}";
    $('meta[property="og:title"]').attr("content", "#{title_for_path(request.path, @region)}");
    $('meta[name="description"]').attr("content", "#{desc_for_path(request.path, @region)}");
    $('meta[property="og:description"]').attr("content", "#{desc_for_path(request.path, @region)}");
  }

#results_container
  #search_results   
    - if @locations.size > 1
      #search_results_count
        %span #{@locations.size} Location#{@locations.size > 1 ? 's' : ''} in Results
    - @locations.each do |location|
      - l = location.clone
      %div.search_result[l]         
        - if (@locations.size == 1)
          %div.location_detail[l, :location_detail]
            = render :partial => 'locations/render_location_detail', :locals => {l: l}
        - else
          %div.sub_nav_location[l, :show_location_detail]{:onclick => "showLocationDetail(#{l.id});"}
            %ul
              %li.name= l.name
              - if (!params[:show_location_distance].blank? && !params[:lat].blank? && !params[:lon].blank?)
                %li.location_types= " distance: #{l.distance_from([params[:lat], params[:lon]]).round(2)} miles"
              - if (l.location_type)
                %li.location_types= " (#{l.location_type.name})"
              .clear
              %li.address
                %span.address_name[l, :location_summary] #{[l.street, l.city, l.state].join(', ')}
                .clear
              %li.machine_names
                %ul
                  - l.machine_names.each do |machine|
                    %li #{machine.html_safe}
          .clear
          %div.location_detail[l, :location_detail]{:style => 'display:none;'}

      - l = nil

  - if (@locations.size == 1)
    :javascript
      $(function() {
        locationLookupMapCenter(#{@locations.first.id});
      });
