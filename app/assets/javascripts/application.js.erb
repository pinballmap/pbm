//= require jquery
//= require jquery_ujs
//= require jquery-ui

var map;
var region;
var mapAdjusted = 0;
var search_string;
var zoomLevel;
var markers = new Array();
var locationIDs = new Array();
var searchSections = new Array();
const REDO_TIMEOUT = 1800;

function toggleData(name, id) {
  var main = id ? '_' + id : '';

  $('#' + name + main).toggle();
}

function clearInfoWindows() {
  if (markers) {
    for (i in markers) {
      markers[i].getPopup().remove();
    }
  }
}

function clearMarkers() {
  if (markers) {
    for (i in markers) {
      markers[i].remove();
    }
  }
}

function showLocations(ids, lats, lons, contents, latLng) {
  clearMarkers();
  clearInfoWindows();
  markers = new Array();

  locationIDs = ids;

  var bounds = new mapboxgl.LngLatBounds();
  var today = new Date();
  var curHr = today.getHours();

  if (mapAdjusted === 0) {
      map = new mapboxgl.Map({
        container: 'map_canvas',
        style: 'mapbox://styles/mapbox/streets-v10',
      });
      map.addControl(new mapboxgl.NavigationControl(), 'top-right');
  }

  for (i in ids) {

    var el = document.createElement('div');
    el.className = 'marker';

    var popup = new mapboxgl.Popup({ offset: 25 })
      .setHTML(contents[i]);

    var marker = new mapboxgl.Marker(el)
      .setLngLat([lons[i], lats[i]])
      .setPopup(popup)
      .on('click', function(e) { map.setView(e.latlng, 13) })
      .addTo(map);

    markers.push(marker);
    bounds.extend([lons[i], lats[i]]);
  }

  if (mapAdjusted === 0) {
    if (contents.length === 1) {
      map.setZoom(18);
      map.setCenter([lons[0], lats[0]]);
      tooZoomed();
    } else if (contents.length == 0 && latLng.length === 1) {
      document.getElementById("map_canvas").innerHTML="<p id='not_found' class='dark hello'>" + "NOT FOUND. PLEASE SEARCH AGAIN." + "<br />" + "Use the dropdown or the autocompleting textbox if you want results." + "</p>";
    } else if (contents.length == 0 && latLng.length === 2) {
      map.fitBounds(bounds, {padding: 50, animate: false});
      map.setZoom(18);
    } else {
      map.fitBounds(bounds ,{padding: 50, animate: false});
    }
  }
  tooZoomed();
}

function unChecked() {
    if ($("#followCheck").is(':checked')) {
        mapAdjusted = 1;
    } else if (!$("#followCheck").is(':checked')) {
        mapAdjusted = 0;
    }
    redo();
}

function redo() {
  var mapupdater;
  map.on('mouseup', function() {
    if (mapAdjusted === 0) {
      map.off('mouseup');
    } else {
      window.clearTimeout(mapupdater);
      mapupdater = window.setTimeout(function() {
        var url = '/locations?by_center_point_and_ne_boundary=' + map.getBounds().getCenter().toArray().join() + ',' + map.getBounds().getNorthEast().toArray().join();
        document.getElementById('search_link_wrapper').style.display = "none";
        $('#locations').html(loadingHTML());
        $.get(url, function(data) {
          $('#locations').html(data);
        });
      }, REDO_TIMEOUT);
    }
  });

  map.on('zoom', function() {
    if (mapAdjusted === 0) {
      map.off('zoom');
    } else {
      window.clearTimeout(mapupdater);
      mapupdater = window.setTimeout(function() {
        var url = '/locations?by_center_point_and_ne_boundary=' + map.getBounds().getCenter().toArray().join() + ',' + map.getBounds().getNorthEast().toArray().join();
        document.getElementById('search_link_wrapper').style.display = "none";
        $('#locations').html(loadingHTML());
        $.get(url, function(data) {
          $('#locations').html(data);
        });
      }, REDO_TIMEOUT);
    }
  });
}

function tooZoomed() { //if zoomed out too far, set to false and remove
  zoomCheck(); //get zoom level on map load
  map.on('zoom', function() {
    zoomCheck(); //get zoom level after zoom has changed
  });
}

function zoomCheck() {
  zoomLevel = map.getZoom(); //check zoom level
  if (zoomLevel < 12) { //show/hide checkbox based on zoom
    document.getElementById("mapFollow_wrapper").style.visibility = "hidden";
    $('#mapFollow_wrapper').addClass('redo_gone');
    $('#followCheck').prop('checked', false); //reset checkbox
    unChecked();
  } else {
    document.getElementById("mapFollow_wrapper").style.visibility = "visible";
    $('#mapFollow_wrapper').removeClass('redo_gone');
  }
}

function scrollToMiddle(id) {
  var elem_position = $(id).offset().top;
  var window_height = $(window).height();
  var y = elem_position - window_height / 2;

  window.scrollTo(0,y);
}

function loadingHTML() {
  return "<div class='loading'><img src='<%= asset_path 'map_loading.gif' %>' /></div>";
}

function setOtherSearchOptions(newSection) {
  var html = "<span class='black_text'>Search:</span>";
  for (section in searchSections) {
      html += "  <button id='" + searchSections[section] + "_section_link' onclick='switchSection(\"" + searchSections[section] + "\");'>" + searchSections[section] + "</button>\n"
  }

  $('#other_search_options').html(html);
}

function switchSection(newSection) {
  setOtherSearchOptions(newSection);
  $("div .section:visible").hide();
  $('#by_' + newSection).toggle();
  $("#" + newSection + "_section_link").toggleClass("active_section_link");
}

function initSearch(operatorIDs, locationIDs, locationTypeIDs, zoneIDs, machineIDs, ipdbIDs, opdbIDs, cityName, machineGroupId, showLocationDistance, lat, lon, byAtLeastNMachinesCity, byAtLeastNMachinesType, byAtLeastNMachinesZone, region) {
  if (operatorIDs || locationIDs || locationTypeIDs || zoneIDs || machineIDs || ipdbIDs || opdbIDs || cityName || machineGroupId || byAtLeastNMachinesCity || byAtLeastNMachinesType || byAtLeastNMachinesZone || region) {

    if (region && !(operatorIDs || locationIDs || locationTypeIDs || zoneIDs || machineIDs || ipdbIDs || opdbIDs || cityName || machineGroupId || byAtLeastNMachinesCity || byAtLeastNMachinesType || byAtLeastNMachinesZone)) {
      return;
    }

    var url = '/locations?by_location_id=' + locationIDs + ';by_operator_id=' + operatorIDs + ';by_type_id=' + locationTypeIDs + ';by_zone_id=' + zoneIDs + ';by_machine_id=' + machineIDs + ';by_city_id=' + cityName + ';by_machine_group_id=' + machineGroupId + ';by_ipdb_id=' + ipdbIDs + ';by_opdb_id=' + opdbIDs + ';show_location_distance=' + showLocationDistance + ';lat=' + lat + ';lon=' + lon + ';by_at_least_n_machines_city=' + byAtLeastNMachinesCity + ';by_at_least_n_machines_type=' + byAtLeastNMachinesType + ';by_at_least_n_machines_zone=' + byAtLeastNMachinesZone + ';region=' + region;

    $('#locations').html(loadingHTML());
    $.get(url, function(data) {
      $('#locations').html(data);
    });
  }
}

function findClosestLocations(region) {
  navigator.geolocation.getCurrentPosition(function(position) {
    var dfd = $.getJSON('/api/v1/locations/closest_by_lat_lon.json', {lat: position.coords.latitude, lon: position.coords.longitude, max_distance: 5, send_all_within_distance: 1});
    dfd.done(function(response) {
      if (!response.locations) {
        document.getElementById("map_canvas").innerHTML="<p id='not_found' class='dark hello'>" + "No pinball found on this map within 5 miles of your location." + "</p>";
      } else {
          var locationIds = [];

          for (var i = 0; i < response.locations.length; i++) {
            locationIds.push(response.locations[i].id)
          }

          window.location.href = 'https://pinballmap.com/'+ region + '/?show_location_distance=1;lat=' + position.coords.latitude + ';lon=' + position.coords.longitude + ';by_location_id=' + locationIds.join('_');
      }
    });
  }, function() {
    // User has blocked access to their location or something else went wrong
  });
}

function findClosestRegion(e) {
  navigator.geolocation.getCurrentPosition(function(position) {
    var dfd = $.getJSON('/api/v1/regions/closest_by_lat_lon.json', {lat: position.coords.latitude, lon: position.coords.longitude});
    dfd.done(function(response) {
      if (!response.region.name) {
        // Couldn't get a region based on location.
        window.alert("Sorry, there are no regions with 250 miles of you.");
      } else {
        // Found a region, redirect to it!
        window.location.href = 'https://pinballmap.com/'+response.region.name;
      }
    });
  }, function() {
    // User has blocked access to their location or something else went wrong
  });
}

function showLocationDetail(locationID) {
  locationLookupMapCenter(locationID);

  $('#show_location_detail_location_' + locationID).toggle();
  toggleData('location_detail_location', locationID);

  $('#location_detail_location_' + locationID).html(loadingHTML());
  $.get('/locations/' + locationID + '/render_location_detail', function(data) {
    $('#location_detail_location_' + locationID).html(data);
  });
}

function locationLookupMapCenter(locationID) {
  var index = jQuery.inArray(locationID, locationIDs);
  clearInfoWindows();
  map.panTo(markers[index].getLngLat());
  markers[index].togglePopup();
}

function setRegion(regionName) {
  region = regionName;
}

function setSearchSections(newSearchSections) {
  searchSections = newSearchSections;
}

function updateLocationUpdatedText(id) {
    $('#last_updated_location_' + id).load('/locations/' + id + '/render_last_updated');

    return false;
}

function initializeRegionMap(ids, lats, lons, contents) {
    api_key = '<%= Rails.env.production? ? ENV["MAPBOX_LIVE_API_KEY"] : ENV["MAPBOX_DEV_API_KEY"] %>';
    mapboxgl.accessToken = api_key

    var bounds = new mapboxgl.LngLatBounds();
    var regionMap = new mapboxgl.Map({
      container: 'region_map',
      style: 'mapbox://styles/mapbox/streets-v10',
    });
    regionMap.addControl(new mapboxgl.NavigationControl(), 'top-right');

    for (i in ids) {
      var el = document.createElement('div');
      el.className = 'markersm';

      var popup = new mapboxgl.Popup({ offset: 25 })
        .setHTML(contents[i]);

      var marker = new mapboxgl.Marker(el)
        .setLngLat([lons[i], lats[i]])
        .setPopup(popup)
        .on('click', function(e) { map.setView(e.latlng, 13) })
        .addTo(regionMap);

      markers.push(marker);
      bounds.extend([lons[i], lats[i]]);
    }

    regionMap.fitBounds(bounds, {padding: 50, animate: false});
}

var fade_flash = function() {
    $("#flash_notice").delay(3000).fadeOut("slow");
    $("#flash_alert").delay(3000).fadeOut("slow");
    $("#flash_error").delay(3000).fadeOut("slow");
};
fade_flash();

var show_ajax_message = function(msg, type) {
    $("#flash-message").html('<div id="flash_'+type+'">'+msg+'</div>');
    fade_flash();
};
